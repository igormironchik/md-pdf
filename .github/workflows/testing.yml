# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
name: "build"

on:
  push:
    branches: [master]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master]

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['cpp']
        # Learn more...
        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}
      
    - run: git submodule update --init --recursive
          
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '6.2.0'
        
    - run: sudo apt install libfreetype6-dev libjpeg-dev libpng-dev zlibc zlib1g-dev libfontconfig1-dev fontconfig lcov libmagick++-dev

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    #- name: Autobuild
    #  uses: github/codeql-action/autobuild@v1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    - run: |
       cmake -DENABLE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug .
       make
       export QT_QPA_PLATFORM=offscreen
       ctest --output-on-failure --verbose
       lcov --directory . --capture --output-file coverage.info
       lcov --remove coverage.info '/usr/*' --output-file coverage.info
       lcov --list coverage.info

    - name: Codecov Upload
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true

  windows:
    name: windows
    runs-on: windows-2019

    strategy:
      fail-fast: true
      matrix:
        language: ['cpp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}
      
    - run: git submodule update --init --recursive

    - uses: suisei-cn/actions-download-file@v1
      id: downloadfile
      name: Download ImageMagick
      with:
        url: "https://github.com/igormironchik/md-pdf/releases/download/0.7.0/ImageMagick.zip"
        target: downloads/

    - name: Unzip ImageMagick
      run: 7z x downloads/ImageMagick.zip

    - name: Append ImageMagick into PATH
      run: echo "${{ github.workspace }}\downloads\ImageMagick" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Test ImageMagick
      run: "${{ github.workspace }}\downloads\ImageMagick\convert" -version

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
          
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '6.2.0'
        
    - name: Enable developer command prompt
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install dependencies with Conan
      run: conan install .

    - name: Generate Makefiles
      run: cmake -G "NMake Makefiles" -DCMAKE_PREFIX_PATH="${{ github.workspace }}\downloads\ImageMagick" -DMDPDF_USE_CONAN=ON -DCMAKE_BUILD_TYPE=Relese .

    - name: Append PATH with packages' bin directories
      run: path.cmd

    - name: Build
      run: nmake

    - name: Test
      run: ctest --output-on-failure --verbose
