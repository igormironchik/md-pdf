# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
name: "build"

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
  
env:
  CONAN_HOME: "${{ github.workspace }}/.conan2"

jobs:
  linux:
    name: linux
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['cpp']
        # Learn more...
        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true
          
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.4.3'
        
    - run: sudo apt install libfreetype6-dev libjpeg-dev libpng-dev zlib1g zlib1g-dev libfontconfig1-dev fontconfig lcov libmagick++-dev libxml2-dev libtiff-dev

    - name: Generate Makefiles
      run: cmake -DENABLE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug .

    - name: Build
      run: make

    - name: Test
      run: |
        export QT_QPA_PLATFORM=offscreen
        ctest --output-on-failure --verbose

    - name: Upload coverage info
      run: |
        lcov --directory . --capture --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info

    - name: Codecov Upload
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true

  windows:
    name: windows
    runs-on: windows-2019

    strategy:
      fail-fast: true
      matrix:
        language: ['cpp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - uses: suisei-cn/actions-download-file@v1
      id: downloadfile
      name: Download ImageMagick
      with:
        url: "https://github.com/igormironchik/md-pdf/releases/download/0.7.0/ImageMagick.zip"
        target: downloads/

    - name: Unzip ImageMagick
      run: 7z x downloads/ImageMagick.zip

    - name: Append ImageMagick into PATH
      run: echo "${{ github.workspace }}/ImageMagick" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Test ImageMagick
      run: convert -version

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
      
    - run: conan profile detect
          
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.4.3'
        
    - run: mkdir build

    - name: Install dependencies with Conan
      run: conan install -of build .
      
    - name: Generate Makefiles
      run: cmake -S . -B build -DCMAKE_PREFIX_PATH="${{ github.workspace }}/ImageMagick" -DCMAKE_BUILD_TYPE=Relese

    - name: Append PATH with packages
      run: echo "${{ github.workspace }}\build\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Build
      run: cmake --build build --config release

    - name: Test
      run: ctest --output-on-failure --verbose --test-dir build

  macos:
    name: macos
    runs-on: macos-11

    strategy:
      fail-fast: true
      matrix:
        language: ['cpp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - run: brew update

    - run: rm '/usr/local/bin/2to3'

    - run: rm '/usr/local/bin/2to3-3.11'

    - run: rm '/usr/local/bin/idle3'

    - run: rm '/usr/local/bin/idle3.11'

    - run: rm '/usr/local/bin/pydoc3'

    - run: rm '/usr/local/bin/pydoc3.11'

    - run: rm '/usr/local/bin/python3'

    - run: rm '/usr/local/bin/python3.11'

    - run: rm '/usr/local/bin/python3-config'

    - run: rm '/usr/local/bin/python3.11-config'

    - run: rm '/usr/local/lib/libtcl8.6.dylib'

    - run: rm '/usr/local/lib/libtk8.6.dylib'

    - run: brew upgrade

    - run: brew install imagemagick@6

    - run: brew uninstall imagemagick

    - run: cp -r /usr/local/opt/imagemagick@6/bin /usr/local

    - run: cp -r /usr/local/opt/imagemagick@6/lib /usr/local

    - run: cp -r /usr/local/opt/imagemagick@6/include /usr/local

    - run: cp -r /usr/local/opt/imagemagick@6/etc /usr/local

    - run: cp -r /usr/local/opt/imagemagick@6/share /usr/local

    - name: Test ImageMagick
      run: convert -version

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.4.3'

    - name: Generate Makefiles
      run: cmake -DCMAKE_BUILD_TYPE=Relese -DOPENSSL_ROOT_DIR=$(brew --prefix)/opt/openssl@1.1 .

    - name: Build
      run: make

    - name: Test
      run: |
        export QT_QPA_PLATFORM=offscreen
        export DYLD_FRAMEWORK_PATH=${{ github.workspace }}/../Qt/6.3.1/macos/lib:$DYLD_FRAMEWORK_PATH
        ctest --output-on-failure --verbose
